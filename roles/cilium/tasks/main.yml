---
# Cilium CNI installation using raw commands

# Clean up any existing Cilium installation when clean_install is requested
- name: Clean up Cilium Helm release
  raw: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml helm delete cilium -n {{ cilium_namespace }} || true
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl delete namespace {{ cilium_namespace }} --ignore-not-found=true || true
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - clean_install | default(false) | bool

- name: Wait for namespace deletion
  raw: |
    sleep 10
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl delete namespace {{ cilium_namespace }} --force --grace-period=0 || true
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - clean_install | default(false) | bool

- name: Force cleanup stuck cilium-secrets namespace if it exists
  raw: |
    if KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl get namespace cilium-secrets -o name 2>/dev/null; then
      KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl get namespace cilium-secrets -o json | jq '.spec.finalizers = []' > /tmp/temp.json
      KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl replace --raw "/api/v1/namespaces/cilium-secrets/finalize" -f /tmp/temp.json || true
    fi
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - clean_install | default(false) | bool

- name: Clean up any existing IngressClass
  raw: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl delete ingressclass cilium --ignore-not-found=true || true
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - clean_install | default(false) | bool

- name: Remove Cilium CRDs
  raw: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl delete crd ciliumnetworkpolicies.cilium.io ciliumclusterwidenetworkpolicies.cilium.io ciliumendpoints.cilium.io ciliumidentities.cilium.io ciliumnetworks.cilium.io ciliumnodes.cilium.io ciliumingresses.cilium.io ciliumloadbalancerippools.cilium.io --ignore-not-found=true || true
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - clean_install | default(false) | bool

- name: Clean up CNI configuration
  raw: |
    rm -rf /etc/cni/net.d/* /var/lib/cni/networks/* /var/lib/rancher/k3s/agent/etc/cni/* || true
  when: 
    - clean_install | default(false) | bool

- name: Install Helm 
  raw: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  register: helm_install
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Add Cilium Helm repository
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml helm repo add cilium {{ cilium_chart_repo }} && helm repo update
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Create Helm values file for Cilium
  raw: |
    cat > /tmp/cilium-values.yaml << 'EOF'
    # Cilium Helm values 
    ipam:
      mode: kubernetes
    kubeProxyReplacement: true
    k8sServiceHost: {{ groups['k3s_masters'][0] }}
    k8sServicePort: 6443
    externalIPs:
      enabled: true
    nodePort:
      enabled: true
    hostPort:
      enabled: true
    hostServices:
      enabled: true
    # Hubble observability
    hubble:
      enabled: {{ cilium_enable_hubble | lower }}
      relay:
        enabled: {{ cilium_enable_hubble | lower }}
      ui:
        enabled: {{ cilium_enable_hubble | lower }}
    # Ingress controller
    ingressController:
      enabled: {{ cilium_enable_ingress | lower }}
      loadbalancerMode: dedicated
      default: true
      enableServiceTypeIngress: true
    # BGP configuration
    bgpControlPlane:
      enabled: {{ cilium_enable_bgp | lower }}
    {% if cilium_enable_bgp | bool %}
      announce:
        loadbalancerIP: {{ cilium_bgp_announce_lb_ips | lower }}
        podCIDR: {{ cilium_bgp_announce_pod_cidr | lower }}
    {% endif %}
    # LoadBalancer settings
    loadBalancer:
      algorithm: maglev
      mode: dsr
    # Network routing
    bpf:
      masquerade: true
    autoDirectNodeRoutes: true
    # L2 announcements for LoadBalancer services
    l2announcements:
      enabled: {{ (cilium_enable_loadbalancer and not cilium_enable_bgp) | lower }}
    ipv4NativeRoutingCIDR: "{{ cilium_ipv4_native_routing_cidr }}"
    # CRD installation
    installCRDs: true
    cni:
      exclusive: true
    operator:
      replicas: 1
    routingMode: native
    EOF
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Wait for all nodes to be Ready
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl wait --for=condition=Ready nodes --all --timeout=600s || true
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Create Cilium namespace
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl create namespace {{ cilium_namespace }} --dry-run=client -o yaml | kubectl apply -f -
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Install Cilium CRDs 
  raw: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumnetworkpolicies.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumclusterwidenetworkpolicies.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumendpoints.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumidentities.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumnetworks.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumnodes.yaml
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Install Ingress CRDs when ingress is enabled
  raw: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2alpha1/ciliumingresses.yaml
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/v{{ cilium_version }}/pkg/k8s/apis/cilium.io/client/crds/v2alpha1/ciliumloadbalancerippools.yaml
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - cilium_enable_ingress | bool

- name: Install Cilium with Helm
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml helm install cilium cilium/cilium --version {{ cilium_chart_version }} --namespace {{ cilium_namespace }} --create-namespace --values /tmp/cilium-values.yaml || true
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Wait for Cilium pods to start
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n {{ cilium_namespace }} wait --for=condition=Ready pods -l k8s-app=cilium --timeout=120s || true
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Set up Example Ingress when ingress is enabled
  raw: |
    cat << 'EOF' | KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f -
    apiVersion: networking.k8s.io/v1
    kind: IngressClass
    metadata:
      name: cilium
      annotations:
        ingressclass.kubernetes.io/is-default-class: "true"
    spec:
      controller: io.cilium/ingress-controller
    EOF
  when:
    - inventory_hostname == groups['k3s_masters'][0]
    - cilium_enable_ingress | bool

- name: Get Cilium status
  raw: KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n {{ cilium_namespace }} get pods -l k8s-app=cilium
  register: cilium_status
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Display Cilium status
  debug:
    var: cilium_status.stdout_lines
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Run Cilium connectivity test
  shell: |
    KUBECONFIG=/etc/rancher/k3s/k3s.yaml cilium connectivity test
  register: cilium_test
  ignore_errors: true
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - cilium_cli_install | bool