---
# K3s master installation

- name: Check if K3s is already installed
  stat:
    path: /usr/local/bin/k3s
  register: k3s_binary

- name: Download K3s install script
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: 0755
  when: not k3s_binary.stat.exists

- name: Install K3s server (first master)
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} \
      sh -s - server \
      {{ k3s_server_args | join(' ') }}
  environment:
    INSTALL_K3S_EXEC: "server"
  when: 
    - inventory_hostname == groups['k3s_masters'][0]
    - not k3s_binary.stat.exists
  register: k3s_first_master

- name: Wait for node-token file to be generated
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token
    state: present
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Get K3s token from first master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Store node_token
  set_fact:
    k3s_token: "{{ node_token.content | b64decode }}"
  when: inventory_hostname == groups['k3s_masters'][0]

- name: Share token with other masters
  set_fact:
    k3s_token: "{{ hostvars[groups['k3s_masters'][0]]['k3s_token'] }}"
  when: inventory_hostname != groups['k3s_masters'][0]

- name: Install K3s server (additional masters)
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} \
      K3S_TOKEN={{ k3s_token }} \
      K3S_URL=https://{{ hostvars[groups['k3s_masters'][0]]['ansible_host'] }}:6443 \
      sh -s - server \
      {{ k3s_server_args | join(' ') }}
  environment:
    INSTALL_K3S_EXEC: "server"
  when: 
    - inventory_hostname != groups['k3s_masters'][0]
    - not k3s_binary.stat.exists

- name: Create directory for kubectl config
  file:
    path: ~/.kube
    state: directory
    mode: '0755'

- name: Copy kubectl config to master node(s)
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"
    mode: '0600'
  
- name: Replace localhost with master IP in kubectl config
  replace:
    path: ~/.kube/config
    regexp: 'https://127.0.0.1:6443'
    replace: 'https://{{ k3s_control_node }}:6443'

- name: Wait for k3s to be ready
  shell: |
    kubectl wait --for=condition=Ready nodes --all --timeout=300s
  register: kubectl_wait
  until: kubectl_wait.rc == 0
  retries: 12
  delay: 10
  when: inventory_hostname == groups['k3s_masters'][0]